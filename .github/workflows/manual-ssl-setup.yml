name: Manual SSL Setup for DOMAIN

on:
  workflow_dispatch:

jobs:
  letsencrypt:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Export DOMAIN to env
        run: echo "DOMAIN=${{ vars.DOMAIN }}" >> $GITHUB_ENV
      - name: Ensure nginx HTTP config exists for $DOMAIN
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa root@${{ secrets.DROPLET_IP }} '
            CONFIG_FILE="/etc/nginx/sites-available/nginx-virtual-host-$DOMAIN"
            if [ ! -f "$CONFIG_FILE" ]; then
              echo "Creating basic HTTP server block for $DOMAIN..."
              echo "server {\n    listen 80;\n    server_name $DOMAIN;\n    location / {\n        proxy_pass http://localhost:8001;\n        proxy_set_header Host \$host;\n        proxy_set_header X-Real-IP \$remote_addr;\n        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto \$scheme;\n    }\n    error_log /var/log/nginx/${DOMAIN}_error.log;\n    access_log /var/log/nginx/${DOMAIN}_access.log;\n}" > $CONFIG_FILE
              ln -sf $CONFIG_FILE /etc/nginx/sites-enabled/nginx-virtual-host-$DOMAIN
              nginx -t && systemctl reload nginx
            else
              echo "Nginx config for $DOMAIN already exists."
            fi
          '
      - name: Install and run Certbot on server
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa root@${{ secrets.DROPLET_IP }} '
            sudo apt-get update
            sudo apt-get install -y certbot python3-certbot-nginx
            sudo certbot --nginx -n --agree-tos --redirect --email "${{ vars.EMAIL_ADDRESS }}" -d $DOMAIN
          '
