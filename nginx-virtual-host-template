# Block direct IP access
server {
    listen 80;
    server_name _;
    
    # Block all requests that don't match a specific domain
    return 444;
}

server {
    listen 80;
    server_name m.DOMAIN_NAME;

    # Security: Block access to sensitive files
    location ~ /\.env(\.example|\.local|\.production)?$ {
        deny all;
        return 404;
    }

    # Block access to git files
    location ~ /\.git {
        deny all;
        return 404;
    }

    # Block access to composer files
    location ~ /composer\.(json|lock)$ {
        deny all;
        return 404;
    }

    # Block access to README and documentation files
    location ~ /(README|CHANGELOG|LICENSE|\.md)$ {
        deny all;
        return 404;
    }

    # Block access to backup and temporary files
    location ~ /\.(bak|backup|tmp|temp|swp|swo)$ {
        deny all;
        return 404;
    }

    # Block access to log files
    location ~ /\.(log|txt)$ {
        deny all;
        return 404;
    }

    # Block access to .htaccess files
    location ~ /\.ht {
        deny all;
    }

    location / {
        # CORS headers for cross-origin requests
        add_header 'Access-Control-Allow-Origin' 'https://DOMAIN_NAME' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

        # Handle preflight OPTIONS requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' 'https://DOMAIN_NAME' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
            add_header 'Access-Control-Max-Age' 1728000 always;
            add_header 'Content-Type' 'text/plain; charset=utf-8' always;
            add_header 'Content-Length' 0 always;
            return 204;
        }

        proxy_pass http://localhost:PORT;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    error_log /var/log/nginx/DOMAIN_NAME_error.log;
    access_log /var/log/nginx/DOMAIN_NAME_access.log;
}